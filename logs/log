[DEBUG] [2018-05-21 14:34:49][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:34:49][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Mon May 21 14:34:49 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:34:49][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:34:49][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [user.xml]
[DEBUG] [2018-05-21 14:34:49][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-21 14:34:50][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [user.xml]
[DEBUG] [2018-05-21 14:34:50][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:34:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-21 14:34:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:34:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:34:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:34:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:34:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-21 14:34:50][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-21 14:34:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:34:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:34:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 172.16.248.149:2181.
[DEBUG] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-21 14:34:50][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, urls: [dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /172.16.250.47:20882 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x4241e0f4, /10.33.101.233:57216 => /172.16.250.47:20882]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.jdd.user.dubbo.service.UserBaseInfoService from url zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1481&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1481&timestamp=1526884490749], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1481&timestamp=1526884490749, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:34:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-21 14:34:51][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-21 14:34:51][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 172.16.248.149:2181
[DEBUG] [2018-05-21 14:34:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:57216-->/172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x4241e0f4, /10.33.101.233:57216 => /172.16.250.47:20882], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /172.16.250.47:20882,url:dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&delay=-1&dubbo=2.5.3&heartbeat=60000&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1481&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:34:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1481&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884490680, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:35:33][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Mon May 21 14:35:33 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [user.xml]
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-21 14:35:33][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [user.xml]
[DEBUG] [2018-05-21 14:35:33][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:35:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-21 14:35:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:35:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:35:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-21 14:35:33][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-21 14:35:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-172.16.248.149.cache, data: {com.jdd.user.dubbo.service.UserBaseInfoService=empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680 empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1481&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884490680 dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 172.16.248.149:2181.
[INFO] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, urls: [dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /172.16.250.47:20882 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x4241e0f4, /10.33.101.233:57235 => /172.16.250.47:20882]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.jdd.user.dubbo.service.UserBaseInfoService from url zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1483&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1483&timestamp=1526884534019], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1483&timestamp=1526884534019, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 172.16.248.149:2181
[DEBUG] [2018-05-21 14:35:34][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:57235-->/172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x4241e0f4, /10.33.101.233:57235 => /172.16.250.47:20882], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /172.16.250.47:20882,url:dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&delay=-1&dubbo=2.5.3&heartbeat=60000&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1483&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:35:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1483&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526884533965, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:49:50][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Mon May 21 14:49:50 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [user.xml]
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-21 14:49:50][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [user.xml]
[DEBUG] [2018-05-21 14:49:50][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:49:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-21 14:49:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:49:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-21 14:49:50][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-21 14:49:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:49:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-172.16.248.149.cache, data: {com.jdd.user.dubbo.service.UserBaseInfoService=empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965 empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1483&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526884533965 dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 172.16.248.149:2181.
[INFO] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-21 14:49:50][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:49:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:49:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, urls: [dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /172.16.250.47:20882 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x4241e0f4, /10.33.101.233:57599 => /172.16.250.47:20882]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.jdd.user.dubbo.service.UserBaseInfoService from url zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1492&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1492&timestamp=1526885390774], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1492&timestamp=1526885390774, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:49:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-21 14:49:51][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-21 14:49:51][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 172.16.248.149:2181
[DEBUG] [2018-05-21 14:49:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:57599-->/172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x4241e0f4, /10.33.101.233:57599 => /172.16.250.47:20882], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /172.16.250.47:20882,url:dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&delay=-1&dubbo=2.5.3&heartbeat=60000&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1492&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:49:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1492&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885390715, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:52:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Mon May 21 14:52:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:52:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:52:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [user.xml]
[DEBUG] [2018-05-21 14:52:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [user.xml]
[DEBUG] [2018-05-21 14:52:27][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:52:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-21 14:52:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:52:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-21 14:52:27][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-21 14:52:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-172.16.248.149.cache, data: {com.jdd.user.dubbo.service.UserBaseInfoService=empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715 empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,commonLoginOrRegisterNew,increaseCjCardRedDot,removeWelfareRedDot,getUserInfo&pid=1492&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885390715 dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 172.16.248.149:2181.
[INFO] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-21 14:52:27][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, urls: [dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /172.16.250.47:20882 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x4241e0f4, /10.33.101.233:57693 => /172.16.250.47:20882]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.jdd.user.dubbo.service.UserBaseInfoService from url zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1498&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:28][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1498&timestamp=1526885547479], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1498&timestamp=1526885547479, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:52:28][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-21 14:52:28][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-21 14:52:28][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 172.16.248.149:2181
[DEBUG] [2018-05-21 14:52:28][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:57693-->/172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x4241e0f4, /10.33.101.233:57693 => /172.16.250.47:20882], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /172.16.250.47:20882,url:dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&delay=-1&dubbo=2.5.3&heartbeat=60000&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1498&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:52:28][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1498&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885547422, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:53:52][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Mon May 21 14:53:52 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [user.xml]
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-21 14:53:52][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [user.xml]
[DEBUG] [2018-05-21 14:53:52][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:53:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-21 14:53:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:53:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-21 14:53:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-21 14:53:52][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-21 14:53:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-21 14:53:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-172.16.248.149.cache, data: {com.jdd.user.dubbo.service.UserBaseInfoService=empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422 empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,increaseCzCardRedDot,getUserAttention,getUserBaseInfo,removeCzCardRedDot,increaseWelfareRedDot,removeCjCardRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getCommonVerifyCode,getUserIdListForSignInPush,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1498&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885547422 dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 172.16.248.149:2181.
[INFO] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, urls: [dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=jdd_user_dubbo_provider&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=19422&revision=2.0-SNAPSHOT&server=netty&side=provider&timestamp=1526877432034, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, empty://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /172.16.250.47:20882 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x4241e0f4, /10.33.101.233:57725 => /172.16.250.47:20882]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.jdd.user.dubbo.service.UserBaseInfoService from url zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1499&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1499&timestamp=1526885632985], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://172.16.248.149:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1499&timestamp=1526885632985, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.jdd.user.dubbo.service.UserBaseInfoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,getUserBaseInfo,removeCzCardRedDot,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,listUserBaseInfo,fobiddenLoginBatch,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,getUserAttentionCount,resetChaseRedDot,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&pid=1499&revision=2.0-SNAPSHOT&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 172.16.248.149:2181
[DEBUG] [2018-05-21 14:53:53][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:57725-->/172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x4241e0f4, /10.33.101.233:57725 => /172.16.250.47:20882], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /172.16.250.47:20882,url:dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&delay=-1&dubbo=2.5.3&heartbeat=60000&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1499&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->172.16.250.47:20882, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-21 14:53:53][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://172.16.250.47:20882/com.jdd.user.dubbo.service.UserBaseInfoService?accepts=50000&anyhost=true&application=wx-dubbo-customer&check=false&delay=-1&dubbo=2.5.3&interface=com.jdd.user.dubbo.service.UserBaseInfoService&methods=getUsersByMobile,listUserInfoUcByCertOrUuid,getCommonVerifyCodeByType,getUserUserExperience,getUserAttention,increaseCzCardRedDot,removeCzCardRedDot,getUserBaseInfo,removeCjCardRedDot,increaseWelfareRedDot,listUserInfoUc,getFansUserIdsRecentLogin,getLoginStateByMid,commonLoginOrRegister,commonLoginOrRegisterWithIP,huaweiLoginOrRegister,getFansUserIds,fobiddenLoginBatch,listUserBaseInfo,getUserIdListForSignInPush,getCommonVerifyCode,increaseSchemeBuyRedDot,resetChaseRedDot,getUserAttentionCount,removeChaseRedDot,increaseChaseRedDot,removeSchemeBuyRedDot,isAttention,increaseCjCardRedDot,commonLoginOrRegisterNew,removeWelfareRedDot,getUserInfo&payload=33554432&pid=1499&revision=2.0-SNAPSHOT&server=netty&side=consumer&timestamp=1526885632932, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-23 18:12:19][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@548a9f61: startup date [Wed May 23 18:12:19 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-23 18:12:19][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-23 18:12:19][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-23 18:12:19][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@548a9f61: org.springframework.beans.factory.support.DefaultListableBeanFactory@6989da5e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-23 18:12:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@23348b5d]
[DEBUG] [2018-05-23 18:12:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7dc0f706]
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6989da5e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:12:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-23 18:12:20][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@413d1baf]
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-23 18:12:20][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-23 18:12:20][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-23 18:12:20][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, urls: [dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, empty://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, empty://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208], dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.101.233:20880 from NettyClient 10.33.101.233 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x041294f8, /10.33.101.233:58098 => /10.33.101.233:20880]], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.101.233 connect to the server /10.33.101.233:20880, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:20][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3068&timestamp=1527070340237], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3068&timestamp=1527070340237, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-23 18:12:58][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-23 18:12:58][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-23 18:12:58][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-23 18:12:58][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.101.233:58098-->/10.33.101.233:20880, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x041294f8, /10.33.101.233:58098 => /10.33.101.233:20880], dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.101.233:20880,url:dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.101.233:0-->10.33.101.233:20880, dubbo version: 2.5.3, current host: 10.33.101.233
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208, dubbo version: 2.5.3, current host: 10.33.101.233
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 17:46:53][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@643b1d11: startup date [Thu May 24 17:46:53 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:46:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 17:46:53][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 17:46:53][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@643b1d11: org.springframework.beans.factory.support.DefaultListableBeanFactory@40a4337a: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 17:46:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6ad82709]
[DEBUG] [2018-05-24 17:46:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@d35dea7]
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@40a4337a: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:46:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:46:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:46:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@28261e8e]
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 17:46:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 17:46:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 17:46:54][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x7d898981, /10.33.100.126:52178 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:46:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2208&timestamp=1527155214136], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2208&timestamp=1527155214136, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:47:00][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 17:47:00][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 17:47:00][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 17:47:00][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:52178-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x7d898981, /10.33.100.126:52178 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 17:50:32][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Thu May 24 17:50:32 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 17:50:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 17:50:32][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 17:50:33][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 17:50:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-24 17:50:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:50:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 17:50:33][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 17:50:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2208&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155214105 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 17:50:33][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x37e4d7bb, /10.33.100.126:52241 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:34][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2210&timestamp=1527155433624], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2210&timestamp=1527155433624, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 17:50:34][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 17:50:34][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 17:50:34][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 17:50:34][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:52241-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x37e4d7bb, /10.33.100.126:52241 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:00:54][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@643b1d11: startup date [Thu May 24 20:00:54 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 20:00:54][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 20:00:54][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@643b1d11: org.springframework.beans.factory.support.DefaultListableBeanFactory@40a4337a: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:00:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6ad82709]
[DEBUG] [2018-05-24 20:00:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@d35dea7]
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@40a4337a: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:00:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:00:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@28261e8e]
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:00:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:00:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 20:00:55][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x7d898981, /10.33.100.126:54020 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:00:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:02:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.33.100.126:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.33.100.126:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:03:53][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Thu May 24 20:03:53 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 20:03:53][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 20:03:53][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:03:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-24 20:03:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:03:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:03:53][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 20:03:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:03:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2650&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163254968 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 20:03:53][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:03:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x37e4d7bb, /10.33.100.126:54032 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2651&timestamp=1527163433757], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2651&timestamp=1527163433757, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:03:54][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 20:03:54][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 20:03:54][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 20:03:54][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:54032-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x37e4d7bb, /10.33.100.126:54032 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.33.100.126:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:04:46][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Thu May 24 20:04:46 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 20:04:46][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 20:04:46][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:04:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-24 20:04:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:04:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:04:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:04:46][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 20:04:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:04:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2651&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163433728 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x37e4d7bb, /10.33.100.126:54036 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2653&timestamp=1527163486964], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2653&timestamp=1527163486964, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 20:04:47][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:54036-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x37e4d7bb, /10.33.100.126:54036 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:05:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.33.100.126:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:06:18][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Thu May 24 20:06:18 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:18][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 20:06:18][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 20:06:18][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:06:18][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-24 20:06:18][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:06:18][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:06:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:06:19][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 20:06:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2653&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163486934 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x37e4d7bb, /10.33.100.126:54042 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2665&timestamp=1527163579199], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2665&timestamp=1527163579199, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 20:06:19][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:54042-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x37e4d7bb, /10.33.100.126:54042 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:46][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Found Equinox FileLocator for OSGi bundle URL resolution
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:06:47][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: startup date [Thu May 24 20:06:47 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [customer.xml]
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.11.0.xsd=activemq.xsd, http://cxf.apache.org/schemas/jaxrs-common.xsd=schemas/jaxrs-common.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://cxf.apache.org/schemas/jaxrs-client.xsd=schemas/jaxrs-client.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-4.3.xsd=org/springframework/jms/config/spring-jms-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://camel.apache.org/schema/osgi/camel-osgi.xsd=camel-osgi.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.3.xsd=org/springframework/transaction/config/spring-tx-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.2.xsd=org/springframework/integration/config/xml/spring-integration-kafka-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration-4.1.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/integration/spring-integration.xsd=org/springframework/integration/config/xml/spring-integration-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://activemq.org/config/1.0=activemq.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd=org/springframework/jdbc/config/spring-jdbc-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/jaxrs.xsd=schemas/jaxrs.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.1.xsd=activemq.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.1.xsd=activemq.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd=org/springframework/web/servlet/config/spring-mvc-4.3.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd}
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxrs-client=org.apache.cxf.jaxrs.client.spring.NamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/integration/kafka=org.springframework.integration.kafka.config.xml.KafkaNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://cxf.apache.org/jaxrs=org.apache.cxf.jaxrs.spring.NamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/integration=org.springframework.integration.config.xml.IntegrationNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [customer.xml]
[DEBUG] [2018-05-24 20:06:47][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@482f8f11: org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:06:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20d525]
[DEBUG] [2018-05-24 20:06:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22fcf7ab]
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@217ed35e: defining beans [wx-dubbo-customer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wx-dubbo-customer' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wx-dubbo-customer'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 20:06:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1a75e76a]
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-05-24 20:06:47][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[DEBUG] [2018-05-24 20:06:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2665&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163579172 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 20:06:47][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, urls: [dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633], dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /10.33.100.126:20880 from NettyClient 10.33.100.126 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x37e4d7bb, /10.33.100.126:54047 => /10.33.100.126:20880]], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient Wx-MacBookPro/10.33.100.126 connect to the server /10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:47][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.wx.provider.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2666&timestamp=1527163607660], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wx-dubbo-customer&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2666&timestamp=1527163607660, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=consumers&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers,configurators,routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[DEBUG] [2018-05-24 20:06:48][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 20:06:48][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 20:06:48][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 20:06:48][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /10.33.100.126:54047-->/10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x37e4d7bb, /10.33.100.126:54047 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:20880,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 10.33.100.126:0-->10.33.100.126:20880, dubbo version: 2.5.3, current host: 10.33.100.126
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wx-dubbo-customer&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2666&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527163607633, dubbo version: 2.5.3, current host: 10.33.100.126
